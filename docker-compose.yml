services:
  observe-mcp:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: observe-mcp-server
    ports:
      - "8000:8000"
    environment:
      # Pinecone configuration
      - PINECONE_API_KEY=${PINECONE_API_KEY}
      - PINECONE_DOCS_INDEX=${PINECONE_DOCS_INDEX:-observe-docs}
      - PINECONE_RUNBOOKS_INDEX=${PINECONE_RUNBOOKS_INDEX:-observe-runbooks}
      
      # Observe API credentials
      - OBSERVE_CUSTOMER_ID=${OBSERVE_CUSTOMER_ID}
      - OBSERVE_TOKEN=${OBSERVE_TOKEN}
      - OBSERVE_DOMAIN=${OBSERVE_DOMAIN:-observeinc.com}
      
      # MCP authentication
      - PUBLIC_KEY_PEM=${PUBLIC_KEY_PEM}
      
      # Smart Tools Configuration (LLM-powered tools)
      - SMART_TOOLS_LLM_PROVIDER=${SMART_TOOLS_LLM_PROVIDER:-anthropic}
      - SMART_TOOLS_API_KEY=${SMART_TOOLS_API_KEY}
      - SMART_TOOLS_MODEL=${SMART_TOOLS_MODEL:-claude-sonnet-4-20250514}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      
      # Docs and runbooks directories (inside container)
      - OBSERVE_DOCS_DIR=/app/observe-docs
      - OBSERVE_RUNBOOKS_DIR=/app/runbooks
    volumes:
      # Mount local directories if you want to use local docs/runbooks
      # Comment out these lines if using the built-in docs/runbooks
      - ./observe-docs:/app/observe-docs:ro
      - ./runbooks:/app/runbooks:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import socket; sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM); sock.settimeout(5); result = sock.connect_ex(('localhost', 8000)); sock.close(); exit(0 if result == 0 else 1)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Add a simple nginx proxy for production deployments
  nginx:
    image: nginx:alpine
    container_name: observe-mcp-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      # - ./ssl:/etc/nginx/ssl:ro  # Mount SSL certificates if needed
    depends_on:
      - observe-mcp
    restart: unless-stopped
    profiles:
      - production  # Only start with: docker-compose --profile production up

networks:
  default:
    name: observe-mcp-network